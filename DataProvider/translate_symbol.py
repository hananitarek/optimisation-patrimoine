
companies = {
        'MC.PA': 'LVMH',
        'OR.PA': 'L\'Oréal',
        'RMS.PA': 'Hermès',
        'TTE': 'Total',
        'CDI.PA': 'Kering',
        'SNY': 'Sanofi',
        'SU.PA': 'Schneider Electric',
        'AI.PA': 'Air Liquide',
        'EL.PA': 'EssilorLuxottica',
        'BNP.PA': 'BNP Paribas',
        'SAF.PA': 'Safran',
        'CS.PA': 'AXA',
        'DG.PA': 'Vinci',
        'DSY.PA': 'Dassault Systèmes',
        'KER.PA': 'Kering',
        'ACA.PA': 'Crédit Agricole',
        'RI.PA': 'Pernod Ricard',
        'BN.PA': 'Danone',
        'ENGIE': 'Engie',
        'CAP.PA': 'Capgemini',
        'SGO.PA': 'Saint-Gobain',
        'ORAN': 'Orange',
        'HO.PA': 'Thales',
        'LR.PA': 'Legrand',
        'PUB.PA': 'Publicis',
        'ML.PA': 'Michelin',
        'VIE.PA': 'Veolia',
        'GLE.PA': 'Société Générale',
        'BOP.F': 'Bouygues',
        'SW.PA': 'Sodexo',
        'EDEN.PA': 'Edenred',
        'AM.PA': 'Dassault Aviation',
        'AMUN.PA': 'Amundi',
        'BIM.PA': 'Biomerieux',
        'ADP.PA': 'Aéroports de Paris',
        'BVI.PA': 'Bureau Veritas',
        'CA.PA': 'Carrefour',
        'VIV.PA': 'Vivendi',
        'RNO.PA': 'Renault',
        'TEP.PA': 'Teleperformance',
        'FGR.PA': 'Eiffage',
        'AC.PA': 'Accor',
        'URW.AS': 'Unibail-Rodamco-Westfield',
        'IPN.PA': 'IPSEN',
        'GET.PA': 'Getlink',
        'GFC.PA': 'Gecina',
        'AKE.PA': 'Arkema',
        'RXL.PA': 'Rexel',
        'FDJ.VI': 'Française des Jeux',
        'LI.PA': 'Klépierre',
        'SK.PA': 'Groupe SEB',
        'RF.PA': 'Eurazeo',
        'RCO.PA': 'Remy Cointreau',
        'SPIE.PA': 'Spie',
        'ALD.PA': 'ALD',
        'SOI.PA': 'Sopra Steria',
        'ATE.PA': 'Alten',
        'SCR.PA': 'Scor',
        'ELIS.PA': 'Elis',
        'COV.PA': 'Covivio',
        'ALO.PA': 'Alstom',
        'DEC.PA': 'JCDecaux',
        'NEOEN.PA': 'Neoen',
        'WLN.PA': 'Worldline',
        'NEX.PA': 'Nexans',
        'TKO.PA': 'Tikehau Capital',
        'MF.PA' : 'Wendel',
        'AF.PA' : 'Air France-KLM',
        'FR.PA' : 'Valeo',
        'FLY.PA': 'Société Foncière Lyonnaise',
        'VIRP.PA': 'Virbac',
        'TRI.PA': 'Trigano',
        'BB.PA': 'BIC',
        'UBI.PA': 'Ubisoft',
        'NK.PA': 'Imerys',
        'CSTM' : 'Constellium',
        'MMB.PA': 'Lagardère',
        'ICAD.PA': 'Icade',
        'RUI.PA': 'RUBIS',
        'COVH.PA': 'Covivio Hotels',
        'ETL.PA':'Eutelsat',
        'OVH.PA':"OVH Groupe",
        'COFA.PA':'Coface',
        'ORP.PA':'Orpea',
        'EXN.PA':'Exclusive Networks',
        'TFI.PA':'TF1',
        'CBE.PA':'Robertet',
        'ALTA.PA':'Altarea',
        'MMT.PA':'Groupe M6',
        'POM.PA':'Plastic Omnium',
        'CRTO':'Criteo',
        'VLTSA.PA':'Voltalia',
        'BEN.PA':'Bénéteau',
        'ABVX':'Abivax',
        'SAVE.PA':'Savencia',
        'FNAC.PA':'Fnac Darty',
        'VALN':'Valneva',
        'ATO.PA':'Atos',
        'OLG.PA':'OL Groupe',
        'NBTX' : 'Nanobiotix',
        'CRI.PA':'Chargeurs',
        'CLARI.PA':'Clariane',
        'IPHA':'Innate Pharma',
        'CLLS':'Cellectis',
        'DBVT':'DBV Technologies',
        'SQNS':'Sequans',
        'ALERS.PA':'Eurobio',
        'NACON.PA':'Nacon',
        'SRP.PA':'Showroomprivé',
        'ALFOC.PA':'Focus',
        'MCPHY.PA':'McPhy Energy',
        'CO.PA':'Casino',
        'ALDNE.PA':'Dont Nod',
        'ALATA.PA':'Alten',
        'ALWIT.PA':'Witbe',
        'AB.PA':'AB Science',
        'ABCA.PA':'ABC Arbitrage',
        'BOI.PA':'Boiron',
        'BOL.PA':'Bolloré',
        'BON.PA':'Bonduelle',
        'ELIOR.PA':'Elior',
        'IDL.PA':'ID Logistics',
        'JCQ.PA':'Jacquet Metal Service',
        'KOF.PA':'Kaufman & Broad',
        'LOUP.PA':'Linedata Services',
        'MERY.PA':'Mersen',
        'MDM.PA':'Maisons du Monde',
        'MAU.PA':'Maurel & Prom',
        'NXI.PA':'Nexity',
        'PEUG.PA':'Peugeot',
        'QDT.PA':'Quadient',
        'VAC.PA':'Pierre et Vacances',

}
def translate_symbol(symbol):
            symbol = symbol.strip()
            if symbol in companies:
                return companies[symbol]
            else:
                return symbol